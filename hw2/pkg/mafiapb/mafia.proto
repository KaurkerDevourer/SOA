syntax = "proto3";

package mafia;

service MafiaService {
    rpc CreateNewUser (CreateUser) returns (UserInfo) {}

    rpc JoinGame (JoinMsg) returns (stream WaitingGame) {}

    rpc DayVote (VoteRequest) returns (VoteResponse) {}

    rpc NightVote (VoteRequest) returns (VoteResponse) {}
}

message CreateUser {
    string username = 1;
}

message UserInfo {
    string id = 1;
    string username = 2;
}

message JoinMsg {
    UserInfo userInfo = 1;
}

enum EventType {
    EventWelcome = 0;
    PlayerJoined = 1;
    GameStarted = 2;
    ProcessDay = 3;
    ProcessNight = 4;
    VoteResults = 5;
    NightResults = 6;
    GameFinished = 7;
}

message Vote {
    string who = 1;
    repeated string by_whome = 2; 
}

message WaitingGame {
    EventType type = 1;
    string msg = 2;
    repeated UserInfo players = 3;
    int32 count = 4;
    string id = 5;
    repeated Vote votes = 6;
}

message VoteRequest {
    string game_id = 1;
    string user_id = 2;
    string kick_user_id = 3;
}

message VoteResponse {
    string ok = 1;
}