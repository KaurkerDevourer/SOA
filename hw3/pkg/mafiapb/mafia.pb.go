// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mafia.proto

package mafia

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_EventWelcome EventType = 0
	EventType_PlayerJoined EventType = 1
	EventType_GameStarted  EventType = 2
	EventType_ProcessDay   EventType = 3
	EventType_ProcessNight EventType = 4
	EventType_VoteResults  EventType = 5
	EventType_NightResults EventType = 6
	EventType_GameFinished EventType = 7
)

var EventType_name = map[int32]string{
	0: "EventWelcome",
	1: "PlayerJoined",
	2: "GameStarted",
	3: "ProcessDay",
	4: "ProcessNight",
	5: "VoteResults",
	6: "NightResults",
	7: "GameFinished",
}

var EventType_value = map[string]int32{
	"EventWelcome": 0,
	"PlayerJoined": 1,
	"GameStarted":  2,
	"ProcessDay":   3,
	"ProcessNight": 4,
	"VoteResults":  5,
	"NightResults": 6,
	"GameFinished": 7,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{0}
}

type CreateUser struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUser) Reset()         { *m = CreateUser{} }
func (m *CreateUser) String() string { return proto.CompactTextString(m) }
func (*CreateUser) ProtoMessage()    {}
func (*CreateUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{0}
}

func (m *CreateUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUser.Unmarshal(m, b)
}
func (m *CreateUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUser.Marshal(b, m, deterministic)
}
func (m *CreateUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUser.Merge(m, src)
}
func (m *CreateUser) XXX_Size() int {
	return xxx_messageInfo_CreateUser.Size(m)
}
func (m *CreateUser) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUser.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUser proto.InternalMessageInfo

func (m *CreateUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type UserInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{1}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type JoinMsg struct {
	UserInfo             *UserInfo `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JoinMsg) Reset()         { *m = JoinMsg{} }
func (m *JoinMsg) String() string { return proto.CompactTextString(m) }
func (*JoinMsg) ProtoMessage()    {}
func (*JoinMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{2}
}

func (m *JoinMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinMsg.Unmarshal(m, b)
}
func (m *JoinMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinMsg.Marshal(b, m, deterministic)
}
func (m *JoinMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinMsg.Merge(m, src)
}
func (m *JoinMsg) XXX_Size() int {
	return xxx_messageInfo_JoinMsg.Size(m)
}
func (m *JoinMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinMsg.DiscardUnknown(m)
}

var xxx_messageInfo_JoinMsg proto.InternalMessageInfo

func (m *JoinMsg) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type Vote struct {
	Who                  string   `protobuf:"bytes,1,opt,name=who,proto3" json:"who,omitempty"`
	ByWhome              []string `protobuf:"bytes,2,rep,name=by_whome,json=byWhome,proto3" json:"by_whome,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{3}
}

func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (m *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(m, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetWho() string {
	if m != nil {
		return m.Who
	}
	return ""
}

func (m *Vote) GetByWhome() []string {
	if m != nil {
		return m.ByWhome
	}
	return nil
}

type WaitingGame struct {
	Type                 EventType   `protobuf:"varint,1,opt,name=type,proto3,enum=mafia.EventType" json:"type,omitempty"`
	Msg                  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Players              []*UserInfo `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	Count                int32       `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Id                   string      `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Votes                []*Vote     `protobuf:"bytes,6,rep,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WaitingGame) Reset()         { *m = WaitingGame{} }
func (m *WaitingGame) String() string { return proto.CompactTextString(m) }
func (*WaitingGame) ProtoMessage()    {}
func (*WaitingGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{4}
}

func (m *WaitingGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitingGame.Unmarshal(m, b)
}
func (m *WaitingGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitingGame.Marshal(b, m, deterministic)
}
func (m *WaitingGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitingGame.Merge(m, src)
}
func (m *WaitingGame) XXX_Size() int {
	return xxx_messageInfo_WaitingGame.Size(m)
}
func (m *WaitingGame) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitingGame.DiscardUnknown(m)
}

var xxx_messageInfo_WaitingGame proto.InternalMessageInfo

func (m *WaitingGame) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_EventWelcome
}

func (m *WaitingGame) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *WaitingGame) GetPlayers() []*UserInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *WaitingGame) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *WaitingGame) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WaitingGame) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

type VoteRequest struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KickUserId           string   `protobuf:"bytes,3,opt,name=kick_user_id,json=kickUserId,proto3" json:"kick_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteRequest) Reset()         { *m = VoteRequest{} }
func (m *VoteRequest) String() string { return proto.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()    {}
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{5}
}

func (m *VoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteRequest.Unmarshal(m, b)
}
func (m *VoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteRequest.Marshal(b, m, deterministic)
}
func (m *VoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteRequest.Merge(m, src)
}
func (m *VoteRequest) XXX_Size() int {
	return xxx_messageInfo_VoteRequest.Size(m)
}
func (m *VoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoteRequest proto.InternalMessageInfo

func (m *VoteRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *VoteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *VoteRequest) GetKickUserId() string {
	if m != nil {
		return m.KickUserId
	}
	return ""
}

type VoteResponse struct {
	Ok                   string   `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteResponse) Reset()         { *m = VoteResponse{} }
func (m *VoteResponse) String() string { return proto.CompactTextString(m) }
func (*VoteResponse) ProtoMessage()    {}
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{6}
}

func (m *VoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteResponse.Unmarshal(m, b)
}
func (m *VoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteResponse.Marshal(b, m, deterministic)
}
func (m *VoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteResponse.Merge(m, src)
}
func (m *VoteResponse) XXX_Size() int {
	return xxx_messageInfo_VoteResponse.Size(m)
}
func (m *VoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VoteResponse proto.InternalMessageInfo

func (m *VoteResponse) GetOk() string {
	if m != nil {
		return m.Ok
	}
	return ""
}

type MsgRequest struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgRequest) Reset()         { *m = MsgRequest{} }
func (m *MsgRequest) String() string { return proto.CompactTextString(m) }
func (*MsgRequest) ProtoMessage()    {}
func (*MsgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7077fdb094f3bc8b, []int{7}
}

func (m *MsgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRequest.Unmarshal(m, b)
}
func (m *MsgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRequest.Marshal(b, m, deterministic)
}
func (m *MsgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequest.Merge(m, src)
}
func (m *MsgRequest) XXX_Size() int {
	return xxx_messageInfo_MsgRequest.Size(m)
}
func (m *MsgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequest proto.InternalMessageInfo

func (m *MsgRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *MsgRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MsgRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("mafia.EventType", EventType_name, EventType_value)
	proto.RegisterType((*CreateUser)(nil), "mafia.CreateUser")
	proto.RegisterType((*UserInfo)(nil), "mafia.UserInfo")
	proto.RegisterType((*JoinMsg)(nil), "mafia.JoinMsg")
	proto.RegisterType((*Vote)(nil), "mafia.Vote")
	proto.RegisterType((*WaitingGame)(nil), "mafia.WaitingGame")
	proto.RegisterType((*VoteRequest)(nil), "mafia.VoteRequest")
	proto.RegisterType((*VoteResponse)(nil), "mafia.VoteResponse")
	proto.RegisterType((*MsgRequest)(nil), "mafia.MsgRequest")
}

func init() {
	proto.RegisterFile("mafia.proto", fileDescriptor_7077fdb094f3bc8b)
}

var fileDescriptor_7077fdb094f3bc8b = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0xe3, 0x38, 0x4e, 0xc6, 0x21, 0x35, 0x0b, 0x12, 0x21, 0x07, 0x14, 0x2c, 0x0e, 0x01,
	0xa4, 0x0a, 0xa5, 0xd0, 0x17, 0xa0, 0x80, 0x8a, 0xd4, 0x2a, 0x72, 0x81, 0x1c, 0xa3, 0x4d, 0x3c,
	0x75, 0xac, 0xc4, 0xde, 0xe0, 0xdd, 0x24, 0xf2, 0x93, 0x70, 0xe4, 0x39, 0x78, 0x3b, 0x34, 0xeb,
	0xb5, 0xdb, 0xf2, 0x73, 0x80, 0x9b, 0xbf, 0xf9, 0xe6, 0xf7, 0x9b, 0x59, 0x83, 0x97, 0xf2, 0xeb,
	0x84, 0x1f, 0x6f, 0x73, 0xa1, 0x04, 0x73, 0x34, 0x08, 0xc6, 0x00, 0x6f, 0x73, 0xe4, 0x0a, 0x3f,
	0x4b, 0xcc, 0xd9, 0x10, 0x3a, 0x3b, 0x89, 0x79, 0xc6, 0x53, 0x1c, 0x58, 0x23, 0x6b, 0xdc, 0x0d,
	0x6b, 0x1c, 0x9c, 0x42, 0x87, 0x7c, 0xce, 0xb3, 0x6b, 0xc1, 0xfa, 0xd0, 0x4c, 0x22, 0xe3, 0xd1,
	0x4c, 0xa2, 0x3b, 0x71, 0xcd, 0xdf, 0xe2, 0xdc, 0x8f, 0x22, 0xc9, 0x2e, 0x64, 0xcc, 0x5e, 0x96,
	0x6e, 0x94, 0x42, 0x07, 0x7b, 0x93, 0xa3, 0xe3, 0xb2, 0xa7, 0x2a, 0x73, 0x58, 0x3b, 0x04, 0x27,
	0xd0, 0xfa, 0x22, 0x14, 0x32, 0x1f, 0xec, 0xc3, 0x4a, 0x98, 0x62, 0xf4, 0xc9, 0x1e, 0x43, 0x67,
	0x51, 0xcc, 0x0f, 0x2b, 0xa1, 0xab, 0xd9, 0xe3, 0x6e, 0xe8, 0x2e, 0x8a, 0x19, 0xc1, 0xe0, 0x87,
	0x05, 0xde, 0x8c, 0x27, 0x2a, 0xc9, 0xe2, 0x0f, 0x3c, 0x45, 0xf6, 0x0c, 0x5a, 0xaa, 0xd8, 0x96,
	0xc3, 0xf4, 0x27, 0xbe, 0xa9, 0xf6, 0x6e, 0x8f, 0x99, 0xfa, 0x54, 0x6c, 0x31, 0xd4, 0x2c, 0x95,
	0x48, 0x65, 0x6c, 0x3a, 0xa7, 0x4f, 0xf6, 0x1c, 0xdc, 0xed, 0x86, 0x17, 0x98, 0xcb, 0x81, 0x3d,
	0xb2, 0xff, 0xd4, 0x68, 0xc5, 0xb3, 0x87, 0xe0, 0x2c, 0xc5, 0x2e, 0x53, 0x83, 0xd6, 0xc8, 0x1a,
	0x3b, 0x61, 0x09, 0x8c, 0x42, 0x4e, 0xad, 0xd0, 0x53, 0x70, 0xf6, 0x42, 0xa1, 0x1c, 0xb4, 0x75,
	0x3a, 0xcf, 0xa4, 0xa3, 0x09, 0xc3, 0x92, 0x09, 0x38, 0x78, 0x1a, 0xe2, 0xd7, 0x1d, 0x4a, 0xc5,
	0x1e, 0x81, 0x1b, 0xf3, 0x14, 0xe7, 0xb5, 0xd0, 0x6d, 0x82, 0xe7, 0x11, 0x11, 0x24, 0x12, 0x11,
	0x65, 0xc7, 0x6d, 0xad, 0x59, 0xc4, 0x46, 0xd0, 0x5b, 0x27, 0xcb, 0xf5, 0xbc, 0x62, 0x6d, 0xcd,
	0x02, 0xd9, 0x74, 0xdb, 0x51, 0xf0, 0x04, 0x7a, 0x65, 0x09, 0xb9, 0x15, 0x99, 0x44, 0xea, 0x52,
	0xac, 0xab, 0x3d, 0x8a, 0x75, 0x30, 0x05, 0xb8, 0x90, 0xf1, 0xff, 0x77, 0x60, 0x84, 0xb4, 0x6b,
	0x21, 0x5f, 0x7c, 0xb3, 0xa0, 0x5b, 0xcb, 0xcd, 0x7c, 0xe8, 0x69, 0x30, 0xc3, 0xcd, 0x52, 0xa4,
	0xe8, 0x37, 0xc8, 0x32, 0xd5, 0x42, 0xd2, 0x8d, 0x60, 0xe4, 0x5b, 0xec, 0x08, 0x3c, 0x5a, 0xdd,
	0x95, 0xe2, 0xb9, 0xc2, 0xc8, 0x6f, 0xb2, 0x3e, 0xc0, 0x34, 0x17, 0x4b, 0x94, 0xf2, 0x8c, 0x17,
	0xbe, 0xad, 0x43, 0x4a, 0x7c, 0x99, 0xc4, 0x2b, 0xe5, 0xb7, 0x28, 0xc4, 0x8c, 0xb5, 0xdb, 0x28,
	0xe9, 0x3b, 0xe4, 0xa2, 0xb9, 0xca, 0xd2, 0x26, 0x0b, 0x65, 0x7d, 0x9f, 0x64, 0x89, 0x5c, 0x61,
	0xe4, 0xbb, 0x93, 0xef, 0x4d, 0xe8, 0x5d, 0xd0, 0x12, 0xae, 0x30, 0xdf, 0x27, 0x4b, 0x64, 0x6f,
	0xe0, 0x5e, 0xf9, 0x14, 0x2e, 0xf1, 0xa0, 0x5f, 0xc3, 0x7d, 0xb3, 0xa4, 0x9b, 0x07, 0x32, 0xfc,
	0xf5, 0x0c, 0x82, 0x06, 0x9b, 0x40, 0x87, 0x7a, 0xd7, 0xe7, 0xd6, 0x37, 0xb4, 0x39, 0xf8, 0x21,
	0x33, 0xf8, 0xd6, 0x49, 0x06, 0x8d, 0x57, 0x16, 0x7b, 0x0d, 0xee, 0x19, 0x2f, 0xf4, 0x79, 0xb3,
	0xdb, 0x97, 0x50, 0x0a, 0x3f, 0x7c, 0x70, 0xc7, 0x56, 0xee, 0x2a, 0x68, 0xb0, 0x53, 0xe8, 0xea,
	0xa9, 0xfe, 0x3d, 0xae, 0x12, 0x90, 0x1e, 0x61, 0x35, 0xd5, 0xcd, 0xa2, 0xff, 0x12, 0xb7, 0x68,
	0xeb, 0x3f, 0xc5, 0xc9, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xd4, 0x05, 0x06, 0x38, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MafiaServiceClient is the client API for MafiaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MafiaServiceClient interface {
	CreateNewUser(ctx context.Context, in *CreateUser, opts ...grpc.CallOption) (*UserInfo, error)
	JoinGame(ctx context.Context, in *JoinMsg, opts ...grpc.CallOption) (MafiaService_JoinGameClient, error)
	DayVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error)
	NightVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error)
	ProcessMsg(ctx context.Context, in *MsgRequest, opts ...grpc.CallOption) (*VoteResponse, error)
}

type mafiaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMafiaServiceClient(cc grpc.ClientConnInterface) MafiaServiceClient {
	return &mafiaServiceClient{cc}
}

func (c *mafiaServiceClient) CreateNewUser(ctx context.Context, in *CreateUser, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/mafia.MafiaService/CreateNewUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mafiaServiceClient) JoinGame(ctx context.Context, in *JoinMsg, opts ...grpc.CallOption) (MafiaService_JoinGameClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MafiaService_serviceDesc.Streams[0], "/mafia.MafiaService/JoinGame", opts...)
	if err != nil {
		return nil, err
	}
	x := &mafiaServiceJoinGameClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MafiaService_JoinGameClient interface {
	Recv() (*WaitingGame, error)
	grpc.ClientStream
}

type mafiaServiceJoinGameClient struct {
	grpc.ClientStream
}

func (x *mafiaServiceJoinGameClient) Recv() (*WaitingGame, error) {
	m := new(WaitingGame)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mafiaServiceClient) DayVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := c.cc.Invoke(ctx, "/mafia.MafiaService/DayVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mafiaServiceClient) NightVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := c.cc.Invoke(ctx, "/mafia.MafiaService/NightVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mafiaServiceClient) ProcessMsg(ctx context.Context, in *MsgRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := c.cc.Invoke(ctx, "/mafia.MafiaService/ProcessMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MafiaServiceServer is the server API for MafiaService service.
type MafiaServiceServer interface {
	CreateNewUser(context.Context, *CreateUser) (*UserInfo, error)
	JoinGame(*JoinMsg, MafiaService_JoinGameServer) error
	DayVote(context.Context, *VoteRequest) (*VoteResponse, error)
	NightVote(context.Context, *VoteRequest) (*VoteResponse, error)
	ProcessMsg(context.Context, *MsgRequest) (*VoteResponse, error)
}

// UnimplementedMafiaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMafiaServiceServer struct {
}

func (*UnimplementedMafiaServiceServer) CreateNewUser(ctx context.Context, req *CreateUser) (*UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewUser not implemented")
}
func (*UnimplementedMafiaServiceServer) JoinGame(req *JoinMsg, srv MafiaService_JoinGameServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinGame not implemented")
}
func (*UnimplementedMafiaServiceServer) DayVote(ctx context.Context, req *VoteRequest) (*VoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayVote not implemented")
}
func (*UnimplementedMafiaServiceServer) NightVote(ctx context.Context, req *VoteRequest) (*VoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NightVote not implemented")
}
func (*UnimplementedMafiaServiceServer) ProcessMsg(ctx context.Context, req *MsgRequest) (*VoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessMsg not implemented")
}

func RegisterMafiaServiceServer(s *grpc.Server, srv MafiaServiceServer) {
	s.RegisterService(&_MafiaService_serviceDesc, srv)
}

func _MafiaService_CreateNewUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MafiaServiceServer).CreateNewUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mafia.MafiaService/CreateNewUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MafiaServiceServer).CreateNewUser(ctx, req.(*CreateUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _MafiaService_JoinGame_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JoinMsg)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MafiaServiceServer).JoinGame(m, &mafiaServiceJoinGameServer{stream})
}

type MafiaService_JoinGameServer interface {
	Send(*WaitingGame) error
	grpc.ServerStream
}

type mafiaServiceJoinGameServer struct {
	grpc.ServerStream
}

func (x *mafiaServiceJoinGameServer) Send(m *WaitingGame) error {
	return x.ServerStream.SendMsg(m)
}

func _MafiaService_DayVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MafiaServiceServer).DayVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mafia.MafiaService/DayVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MafiaServiceServer).DayVote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MafiaService_NightVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MafiaServiceServer).NightVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mafia.MafiaService/NightVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MafiaServiceServer).NightVote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MafiaService_ProcessMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MafiaServiceServer).ProcessMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mafia.MafiaService/ProcessMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MafiaServiceServer).ProcessMsg(ctx, req.(*MsgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MafiaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mafia.MafiaService",
	HandlerType: (*MafiaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNewUser",
			Handler:    _MafiaService_CreateNewUser_Handler,
		},
		{
			MethodName: "DayVote",
			Handler:    _MafiaService_DayVote_Handler,
		},
		{
			MethodName: "NightVote",
			Handler:    _MafiaService_NightVote_Handler,
		},
		{
			MethodName: "ProcessMsg",
			Handler:    _MafiaService_ProcessMsg_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "JoinGame",
			Handler:       _MafiaService_JoinGame_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mafia.proto",
}
